# Copyright (c) 2006, 2007 Julio M. Merino Vidal
# Copyright (c) 2008 Ilya Sokolov, Boris Schaeling
# Copyright (c) 2009 Boris Schaeling
# Copyright (c) 2010 Felipe Tanus, Boris Schaeling
# Copyright (c) 2011, 2012 Jeff Flinn, Boris Schaeling
#
# Distributed under the Boost Software License, Version 1.0. (See accompanying
# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

project : requirements
   <include>../include
   <include>../../winapi/include
  
 # <source>/boost//headers
 # <source>/boost//system
  <toolset>msvc:<define>_SCL_SECURE_NO_WARNINGS
  <target-os>windows:<define>WIN32_LEAN_AND_MEAN
  <target-os>linux:<linkflags>-lpthread
  <toolset>gcc:<cxxflags>-std=gnu++11
  <linkflags>-lws2_32     
;

searched-lib shell32 ;

import testing ;


alias program_options 	: /boost//program_options ;
alias filesystem 	    : /boost//filesystem 	  ;
alias iostreams 		: /boost//iostreams 	  ;
alias system   			: /boost//system   		  ;
alias thread   			: /boost//thread   		  ;

exe sparring_partner : sparring_partner.cpp  :
	<warnings>off
	;

test-suite ts :
  	 [ run pipe.cpp iostreams  ]
     [ run async.cpp iostreams system thread : : sparring_partner	]
     [ run bind_stderr.cpp iostreams : : sparring_partner 			]
     [ run bind_stdin.cpp iostreams system : : sparring_partner 	]
     [ run bind_stdin_stdout.cpp iostreams system : : sparring_partner ]
     [ run bind_stdout.cpp iostreams system : : sparring_partner  	]
     [ run bind_stdout_stderr.cpp iostreams system : : sparring_partner  ]
     [ run close_stderr.cpp iostreams system : : sparring_partner  ]
     [ run close_stdin.cpp iostreams  system : : sparring_partner  ]
     [ run close_stdout.cpp iostreams system : : sparring_partner  ]
     [ run exit_code.cpp iostreams program_options system : : sparring_partner  ]
#     [ run extensions.cpp system : : sparring_partner   ]
     [ run env.cpp iostreams program_options system : : sparring_partner ]
#     [ run posix_specific.cpp iostreams system : : sparring_partner : <build>no <target-os>linux:<build>yes                    ]
     [ run run_exe.cpp  : : sparring_partner                                                                             		]
     [ run run_exe_path.cpp : : sparring_partner                                                             					]
     [ run search_path.cpp filesystem system : : : <target-os>windows:<source>shell32 ]
     [ run shell_path.cpp filesystem system                                                                                    ]
#     [ run show_window.cpp iostreams system : : sparring_partner  : <build>no <target-os>windows:<build>yes                    ]
#     [ run start_in_dir.cpp iostreams filesystem system : : sparring_partner                                                   ]
#     [ run start_in_dir_wstring.cpp iostreams filesystem system : : sparring_partner : <build>no <target-os>windows:<build>yes ]
     [ run terminate.cpp system : : sparring_partner     		]
     [ run throw_on_error.cpp system : : sparring_partner       ]
     [ run wait.cpp system : : sparring_partner				    ]
#     [ run windows_specific.cpp iostreams system : : sparring_partner : <build>no <target-os>windows:<build>yes                ]
	;