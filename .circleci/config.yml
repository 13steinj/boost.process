version: 2

jobs:
  build:
    environment:
      - BOOST_LIBRARY=process
      - CXX_STANDARD=gnu+11
    docker:
      - image: "dliu/ubuntu-gcc-valgrind"
    steps:
      - checkout
      - run:
          name: Setting up Environment
          command: |
            echo 'export BOOST="$HOME/boost-local"' >> $BASH_ENV
            if [ $CIRCLE_BRANCH = "master" ]; then
                echo 'export BOOST_BRANCH="master"' >> $BASH_ENV;
            else
                echo 'export BOOST_BRANCH="develop"' >> $BASH_ENV;
            fi
            echo 'export BOOST_REMOVE="$BOOST/libs/$BOOST_LIBRARY"' >> $BASH_ENV
      - run:
          name: install pre dependencies
          command: |
            apt-get update -yqq
            apt-get install git -y
      - run:
          name: Initializing git repo for boost
          command: |
            pwd
            git init $BOOST
            cd $BOOST
            pwd
            echo Testing $BRANCH_TO_TEST
            git remote add --no-tags -t $BOOST_BRANCH origin https://github.com/boostorg/boost.git
            git fetch --depth=1
            git checkout $BOOST_BRANCH
            git submodule update --init --merge
            git remote set-branches --add origin $BOOST_BRANCH
            git pull --recurse-submodules
            git submodule update --init
            git checkout $BOOST_BRANCH
            git submodule foreach "git reset --quiet --hard; git clean -fxd"
            git reset --hard; git clean -fxd
            git status
            rm -rf $BOOST_REMOVE
            mv $CIRCLE_WORKING_DIRECTORY $BOOST/libs
      - run:
          name: Bootstrapping boost-build
          command: |
            ./bootstrap.sh
            ./b2 headers
      - run:
          name: Building examples
          command: |
            cd $BOOST/libs/project/example
            ../../../b2 -j8
      - run:
          name: Running Unit tests
          command: |
            cd $BOOST/libs/project/test
            ../../../b2 -j8 with-valgrind address-model=64 architecture=x86 "testing.launcher=valgrind valgrind=on" toolset=gcc cxxflags="--coverage -std=$CXX_STANDARD" linkflags="--coverage" -sBOOST_BUILD_PATH=. || RES_1=$? | tee build.log
            ../../../b2 -j8 without-valgrind address-model=64 architecture=x86 toolset=gc cxxflags="--coverage -std=$CXX_STANDARD" linkflags="--coverage" -sBOOST_BUILD_PATH=. || RES_2=$? | tee -a build.log

            python <(curl -s https://report.ci/annotate.py) --tool gcc --name "Circle CI Gcc Build"
            python <(curl -s https://report.ci/upload.py) --name "Circle CI Gcc Tests"
            bash <(curl -s https://codecov.io/bash) -x gcov
            exit $SUCCESS
