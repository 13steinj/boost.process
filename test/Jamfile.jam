# Copyright (c) 2006, 2007 Julio M. Merino Vidal
# Copyright (c) 2008 Ilya Sokolov, Boris Schaeling
# Copyright (c) 2009 Boris Schaeling
# Copyright (c) 2010 Felipe Tanus, Boris Schaeling
# Copyright (c) 2011, 2012 Jeff Flinn, Boris Schaeling
#
# Distributed under the Boost Software License, Version 1.0. (See accompanying
# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

project : requirements
 # <source>/boost//headers
 # <source>/boost//system
 <include>../include
 
  <toolset>msvc:<define>_SCL_SECURE_NO_WARNINGS
  <target-os>windows:<define>WIN32_LEAN_AND_MEAN
  <target-os>linux:<linkflags>-lpthread
  <toolset>gcc:<linkflags>-lws2_32
  <library-path>F:/boost_1_60_0/stage/lib
;

searched-lib shell32 ;

import testing ;


lib program_options 	: : <toolset>gcc:<file>F:/boost-git/lib64/libboost_program_options-mgw-mt-d-1_60.a <toolset>msvc:<file>F:/boost_1_60_0/stage/lib/libboost_program_options-vc140-mt-gd-1_60.lib ;
lib filesystem 	    	: : <toolset>gcc:<file>F:/boost-git/lib64/libboost_filesystem-mgw-mt-d-1_60.a 	   <toolset>msvc:<file>F:/boost_1_60_0/stage/lib/libboost_filesystem-vc140-mt-gd-1_60.lib ;
lib system   			: : <toolset>gcc:<file>F:/boost-git/lib64/libboost_system-mgw-mt-d-1_60.a   	   <toolset>msvc:<file>F:/boost_1_60_0/stage/lib/libboost_system-vc140-mt-gd-1_60.lib ;
lib thread   			: : <toolset>gcc:<file>F:/boost-git/lib64/libboost_thread-mgw-mt-d-1_60.a   	   <toolset>msvc:<file>F:/boost_1_60_0/stage/lib/libboost_thread-vc140-mt-gd-1_60.lib ;
lib iostreams 			: : <toolset>gcc:<file>F:/boost-git/lib64/libboost_iostreams-mgw-mt-d-1_60.a 	   
							<toolset>msvc:<file>F:/boost_1_60_0/stage/lib/libboost_iostreams-vc140-mt-gd-1_60.lib
							 ;

exe sparring_partner : sparring_partner.cpp program_options iostreams :
	<warnings>off
	;

exe sub_launch : sub_launcher.cpp program_options : <warnings>off ;	

test-suite ts :
  	[ run pipe.cpp  ]
    [ run async.cpp  system thread : --log_level=all : sparring_partner	]
    [ run bind_stderr.cpp  : : sparring_partner 			]
    [ run bind_stdin.cpp  system : : sparring_partner 	]
    [ run bind_stdin_stdout.cpp  system : --log_level=all : sparring_partner ]
    [ run bind_stdout.cpp  system : : sparring_partner  	]
    [ run bind_stdout_stderr.cpp  system : : sparring_partner  ]
    [ run close_stderr.cpp  system : : sparring_partner  ]
    [ run close_stdin.cpp   system : : sparring_partner  ]
    [ run close_stdout.cpp  system : : sparring_partner  ]
    [ run exit_code.cpp  program_options system : : sparring_partner  ]
    [ run extensions.cpp system : : sparring_partner   ]
    [ run env.cpp  program_options system : : sparring_partner ]
    [ run group.cpp   system thread : : sub_launch : <build>no <target-os>windows:<build>yes	]
    [ run posix_specific.cpp  system : : sparring_partner : <build>no <target-os>linux:<build>yes ]
    [ run run_exe.cpp  : : sparring_partner                                                                ]
    [ run run_exe_path.cpp : : sparring_partner                                                            ]
    [ run search_path.cpp filesystem system : : : <target-os>windows:<source>shell32                       ]
    [ run shell_path.cpp filesystem system                                                                 ]
    [ run show_window.cpp  system : : sparring_partner  : <build>no <target-os>windows:<build>yes ]
    [ run start_dir.cpp  filesystem system : : sparring_partner                                   ]
    [ run terminate.cpp system : : sparring_partner     		]
    [ run throw_on_error.cpp system : : sparring_partner        ]
    [ run wait.cpp system : --log_level=all : sparring_partner				    ]
	;
